{"version":3,"sources":["useRWD.js","components/Arcade_Draco.js","components/80s_Draco.js","components/Mountains_Draco.js","Music/TrackMusic.js","App.js","intro.js","index.js"],"names":["useRWD","useState","device","setDevice","handleRWD","window","innerWidth","navigator","userAgent","match","useEffect","addEventListener","removeEventListener","Model","keys","_ready","_setReady","start","clicked","props","forward","backward","left","right","buttonB","jump","buttonR","buttonG","group","Escape","useRef","button_B","button_R","button_G","button_joy","v","THREE","useFrame","state","camera","position","lerp","set","lookAt","updateProjectionMatrix","current","Object","assign","document","createElement","src","crossOrigin","loop","video","play","useGLTF","nodes","materials","ref","dispose","Html","scale","rotation","Math","PI","transform","occlude","className","style","fontSize","geometry","arcade","material","Button_PP","joy","Button_GG","Button_YY","joy001","args","color","width","height","margin","padding","border","top","borderRadius","title","onClick","screen01","clearcoat","clearcoatRoughness","toneMapped","attach","flipY","repeat","offset","wrapT","wrapS","encoding","thickness","roughness","transmission","ior","envMapIntensity","attenuationTint","attenuationDistance","Island013","Object_4","Object_6","preload","Track","url","y","space","obj","suspend","createAudio","gain","context","update","data","connect","destination","value","disconnect","avg","i","length","updateMatrix","setMatrixAt","matrix","setHSL","instanceMatrix","needsUpdate","castShadow","fetch","res","arrayBuffer","buffer","AudioContext","webkitAudioContext","source","createBufferSource","Promise","decodeAudioData","createGain","analyser","createAnalyser","fftSize","Uint8Array","frequencyBinCount","getByteFrequencyData","reduce","prev","cur","App","ready","usePersonControls","KeyW","KeyS","KeyA","KeyD","Space","KeyJ","KeyK","KeyL","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","moveFieldByKey","key","movement","setMovement","handleKeyDown","e","m","code","handleKeyUp","setStart","setAPPReady","setClicked","APPready","flat","dpr","fov","fallback","process","PresentationControls","global","zoom","config","mass","tension","snap","polar","azimuth","TitleText","Text","font","letterSpacing","Intro","children","console","log","render","date","year","link1","href","link2","Loader","getElementById"],"mappings":"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","file":"static/js/main.c51dea8d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\n\nfunction detectmob() {\n  if (navigator.userAgent.match(/Android/i)\n    || navigator.userAgent.match(/webOS/i)\n    || navigator.userAgent.match(/iPhone/i)\n    || navigator.userAgent.match(/iPad/i)\n    || navigator.userAgent.match(/iPod/i)\n    || navigator.userAgent.match(/BlackBerry/i)\n    || navigator.userAgent.match(/Windows Phone/i)\n  ) {\n    return true;\n  }\n  else {\n    return false;\n  }\n}\n\n\nconst useRWD = () => {\n  const [device, setDevice] = useState(\"PC\");\n\n  const handleRWD = () => {\n\n    if (window.innerWidth > 768)\n      setDevice(\"PC\");\n    if (detectmob()) {\n      setDevice(\"mobile\");\n    }\n    else if (window.innerWidth > 576)\n      setDevice(\"tablet\");\n    else\n      setDevice(\"mobile\");\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleRWD);\n    return (() => {\n      window.removeEventListener('resize', handleRWD);\n    })\n  }, []);\n\n  return device;\n}\n\n\n\n\nexport default useRWD;\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n\nimport * as THREE from 'three'\nimport React, { Suspense, useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { Html, Mask, Image, Environment, useGLTF, ContactShadows, OrbitControls } from '@react-three/drei'\nimport { PresentationControls } from '@react-three/drei'\nimport useRWD from '../useRWD';\n\n\nexport default function Model({ keys, _ready, _setReady, start, clicked, props }) {\n\n  const device = useRWD();\n\n\n  const { forward, backward, left, right, jump, buttonB, buttonR, buttonG, Escape } = keys\n\n\n  const group = useRef()\n  const arcade = useRef()\n\n\n  const image = useRef()\n\n  const button_B = useRef()\n  const button_R = useRef()\n  const button_G = useRef()\n  const button_joy = useRef()\n\n  // const [_ready, set_Ready] = useState(false)\n\n\n  // const [onUP, setUP] = useState(false)\n  // const [onDOWN, setDOWN] = useState(false)\n  // const [onLEFT, setLEFT] = useState(false)\n  // const [onRIGHT, setRIGHT] = useState(false)\n\n  // const [JoyVertical, setVertical] = useState(0.5)\n  // const [JoyHorizontal, setHorizontal] = useState(-0.5)\n\n  const v = new THREE.Vector3()\n\n  // useFrame((state) => {\n  //   // state.camera.position.lerp(v.set(0, 0.1, 1.2), 0.1)\n  //   // forward, backward, left, right, jump\n  //   // button_joy.current.rotation.x = Math.PI / 2+ right?0.5:0;\n  //   // button_joy.current.rotation.x = Math.PI / 2+ left?-0.5:0;\n  //   // button_joy.current.rotation.y = -Math.PI / 9+forward?0.5:0;\n  //   // button_joy.current.rotation.y =-Math.PI / 9+ backward?-0.5:0;\n  //   // button_joy.current.rotation=[Math.PI / 2, -Math.PI / 9, 0]\n\n\n  // })\n\n\n\n  // useFrame((state) => {\n  //   // state.camera.position.lerp(v.set(0, 0.1, 1.2), 0.1)\n  //   state.camera.position.lerp(v.set(0, 0.1, 1.2), 0.1)\n  //   state.camera.lookAt(0, 0.05, 0)\n  //   state.camera.updateProjectionMatrix()\n  // })\n  useFrame((state) => {\n    if (start) {\n      // console.log('device',device)\n\n      if (device === \"PC\") {\n        // state.camera.position.lerp(v.set(0, 0.1, 1.2), 0.1)\n        state.camera.position.lerp(v.set(0, 0.2, 1.2), 0.05)\n        // state.camera.position.lerp(v.set(0, 0, 8), 0.05)\n        state.camera.lookAt(0, 0.04, 0)\n        state.camera.updateProjectionMatrix()\n      } else {\n        group.current.position.lerp(v.set(5, 1, 0), 0.05)\n\n        // state.camera.position.lerp(v.set(0, 0.2, 2.5), 0.05)\n        // state.camera.lookAt(0, -0.24, 0)\n        state.camera.position.lerp(v.set(0, 1, 10), 0.05)\n        state.camera.lookAt(0, 0.4, 0)\n        state.camera.updateProjectionMatrix()\n        // group.children.updateProjectionMatrix()        \n      }\n    } else {\n      // state.camera.position.lerp(v.set(0, 0, 8), 0.05)\n      state.camera.position.lerp(v.set(4.5, 4, 7), 0.05)\n      state.camera.lookAt(0, 0, 0)\n      state.camera.updateProjectionMatrix()\n      group.current.position.lerp(v.set(0, 0, 0), 0.05)\n\n    }\n\n    // if (ready) {\n    //   // state.camera.position.lerp(v.set(0, 0.1, 1.2), 0.1)\n    //   state.camera.position.lerp(v.set(0, 0.2, 1.2), 0.05)\n    //   // state.camera.position.lerp(v.set(0, 0, 8), 0.05)\n    //   state.camera.lookAt(0, 0.04, 0)\n    //   state.camera.updateProjectionMatrix()\n    // }else {\n    //   state.camera.position.lerp(v.set(0, 0, 8), 0.05)\n    //   // state.camera.position.lerp(v.set(4.5, 4, 7), 0.05)\n    //   state.camera.lookAt(0, 0, 0)\n    //   state.camera.updateProjectionMatrix()\n    // }\n\n  })\n\n  const [video] = useState(() => Object.assign(document.createElement('video'), { src: '/drei.mp4', crossOrigin: 'Anonymous', loop: true }))\n  useEffect(() => void (clicked && video.play()), [video, clicked])\n\n\n  const { nodes, materials } = useGLTF(process.env.REACT_APP_URL + '/arcade_Draco.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n       <Html scale={0.4} rotation={[0, Math.PI / 2, 0]} position={[0,1.3,0]} transform occlude >\n          <div className=\"annotation\">\n            check <span style={{ fontSize: '1.5em' }}>🥲</span>\n          </div>\n        </Html>\n      <mesh\n        geometry={nodes.arcade.geometry}\n        material={nodes.arcade.material}\n        position={[0.25, 0.69, -0.01]}\n        rotation={[Math.PI / 2, -Math.PI / 9, 0]}\n      />\n      <mesh\n        ref={button_B}\n        geometry={nodes.Button_PP.geometry}\n        material={nodes.Button_PP.material}\n        position={[0.24, buttonB ? 0.67 - 0.005 : 0.67, 0.15]}\n        rotation={[Math.PI / 2, -Math.PI / 9, 0]}\n      />\n      <mesh\n        geometry={nodes.joy.geometry}\n        material={nodes.joy.material}\n        // position={[0.25, 0.69, -0.12]}\n        position={[0.25, 0.68, -0.12]}\n        rotation={[Math.PI / 2, -Math.PI / 9, 0]}\n      />\n      <mesh\n        ref={button_G}\n        geometry={nodes.Button_GG.geometry}\n        material={nodes.Button_GG.material}\n        position={[0.24, buttonG ? 0.67 - 0.005 : 0.67, 0.02]}\n        rotation={[Math.PI / 2, -Math.PI / 9, 0]}\n      />\n      <mesh\n        ref={button_R}\n        geometry={nodes.Button_YY.geometry}\n        material={nodes.Button_YY.material}\n        position={[0.24, buttonR ? 0.67 - 0.005 : 0.67, 0.08]}\n        rotation={[Math.PI / 2, -Math.PI / 9, 0]}\n      />\n      {/* <mesh\n        geometry={nodes.screen.geometry}\n        material={nodes.screen.material}\n        position={[0.11, 0.84, -0.01]}\n        rotation={[Math.PI / 2, -Math.PI / 9, 0]}\n      /> */}\n      <mesh\n        ref={button_joy}\n        geometry={nodes.joy001.geometry}\n        material={nodes.joy001.material}\n        // position={[0.24, 0.66, -0.12]}\n        position={[0.24, 0.65, -0.12]}\n        // rotation={[Math.PI / 2-0.5, -Math.PI / 9, 0]}\n        // rotation={[Math.PI / 2+0.5, -Math.PI / 9, 0]}\n        // rotation={left&&!right?[Math.PI / 2+0.5, -Math.PI / 9, 0]:!left&&right?[Math.PI / 2-0.5, -Math.PI / 9, 0]:[Math.PI / 2, -Math.PI / 9, 0]}\n        rotation-x={left && !right ? Math.PI / 2 + 0.5 : !left && right ? Math.PI / 2 - 0.5 : Math.PI / 2}\n        rotation-y={forward && !backward ? -Math.PI / 9 + 0.5 : !forward && backward ? -Math.PI / 9 - 0.5 : -Math.PI / 9} />\n      <group position={[0.11, 0.83, -0.02]} rotation={[Math.PI / 2, 0.33, 0]} >\n        {/* <Image ref={image} rotation={[Math.PI / 2, Math.PI / 2, -Math.PI]} position={[0, 0.01, 0]} scale={[0.45, 0.45]} transparent={true} opacity={1} raycast={() => null} url={\"/thumbnail.png\"} /> */}\n      </group>\n\n      <mesh rotation={[0, Math.PI / 2, 0]} position={[0.05, 0.8, 0]}>\n        <planeGeometry args={[0.4, 0.4]} />\n        <meshStandardMaterial color=\"#585361\" />\n        {_ready &&\n\n          <Html className=\"content\"\n            rotation={[-0.2, 0, 0]}\n            // rotation={[0, Math.PI / 2, 0]}\n            position={[-0.15, 0.165, 0]}\n            scale={0.009}\n            transform\n          // occlude\n          >\n            <div className=\"wrapper\">\n              <iframe\n                // style={{transform: 'rotate(90deg)'}}\n                style={{ width: '110%', height: '110%', margin: 0, padding: 0, border: 0, top: 0, left: 0, borderRadius: '15%' }}\n                className=\"relative w-full h-full\"\n                src=\"https://flappybacon.netlify.app/\"\n                // src=\"https://dayuan.dev/\"\n                // src=\"https://aframe.io/examples/showcase/anime-UI/\"\n                title=\"W3Schools Free Online Web Tutorials\">\n\n              </iframe>\n            </div>\n          </Html>}\n      </mesh>\n\n      {/* <mesh rotation={[0, Math.PI / 2, 0]} position={[-0.3, 0, 0]}>\n        <planeGeometry args={[50, 50]} />\n        <meshStandardMaterial color=\"blue\" />\n      </mesh>\n      <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, 0.1, 0]}>\n        <planeGeometry args={[50, 50]} />\n        <meshStandardMaterial color=\"orange\" />\n      </mesh> */}\n\n\n      {/* <group position={[0, 0, 0]} rotation={[0, 0, 0.2]}>   // transform this\n        <Html className=\"content\"\n          rotation={[0, Math.PI / 2, 0]}\n          position={[0.23, 1, 0.18]}\n          scale={0.01}\n          transform occlude>\n          <div className=\"wrapper\">\n            <iframe\n              // style={{transform: 'rotate(90deg)'}}\n              style={{ width: '110%', height: '110%', margin: 0, padding: 0, border: 0, top: 0, left: 0 }}\n              className=\"relative w-full h-full\"\n              // src=\"https://nftsearch.site/\"\n              // src=\"https://dayuan.dev/\"\n              src=\"https://aframe.io/examples/showcase/anime-UI/\"\n              title=\"W3Schools Free Online Web Tutorials\">\n\n            </iframe>\n          </div>\n        </Html>\n      </group> */}\n      {/* <group position={[0.11, 0.83, -0.02]} rotation={[0, 0, 0]} >\n        <Html className=\"content\" rotation={[0, 0, 0]} position={[0, 10, -0.09]} scale={50} transform occlude>\n          <div className=\"wrapper\">\n            <iframe src=\"https://nftsearch.site/\" title=\"nftsearch\"></iframe>\n            <iframe\n              // style={{transform: 'rotate(90deg)'}}\n              style={{ width: '110%', height: '110%', margin: 0, padding: 0, border: 0, top: 0, left: 0 }}\n              className=\"relative w-full h-full\"\n              // src=\"https://nftsearch.site/\"\n              // src=\"https://dayuan.dev/\"\n              src=\"https://aframe.io/examples/showcase/anime-UI/\"\n              title=\"W3Schools Free Online Web Tutorials\"></iframe>\n          </div>\n        </Html>\n      </group> */}\n      <mesh\n        onClick={() => { _setReady(true) }}\n        geometry={nodes.screen01.geometry}\n        // material={nodes.screen01.material}\n        position={[0.11, 0.83, -0.02]}\n        rotation={[Math.PI / 2, -0.34, 0]}\n      >\n        {!_ready && <meshPhysicalMaterial clearcoat={1} clearcoatRoughness={0} toneMapped={false}>\n          <videoTexture\n            // rotation={[Math.PI / 2,0, 0]}\n            attach=\"map\"\n            args={[video]}\n            flipY={false}\n            // repeat={[5, 9]}\n            // offset={[-0.1, 0]}\n            repeat={[1, 1]}\n            offset={[0, 0]}\n            wrapT={THREE.RepeatWrapping}\n            wrapS={THREE.RepeatWrapping}\n            encoding={THREE.sRGBEncoding}\n          />\n        </meshPhysicalMaterial>}\n\n\n        {_ready && <meshPhysicalMaterial\n          thickness={5}\n          roughness={0.1}\n          clearcoat={0.9}\n          clearcoatRoughness={1}\n          transmission={1}\n          ior={1}\n          envMapIntensity={9}\n          color='#050505'\n          attenuationTint='#0096ff'\n          attenuationDistance={0.8} >\n        </meshPhysicalMaterial>}\n\n      </mesh>\n      {/* <mesh\n        geometry={nodes.screen01.geometry}\n        // material={nodes.screen01.material}\n        position={[0.11, 0.83, -0.02]}\n        rotation={[Math.PI / 2, -0.34, 0]}\n      > */}\n      {/* <group position={[-0.001, 0, 0]} >\n        <Html className=\"content\"\n          // rotation={[0, 0, 0]}\n          rotation={[0, Math.PI / 2 +  0.3, -Math.PI / 2]}\n          position={[-0.04, 0.17, -0.06]}\n          scale={0.0085}\n          transform occlude>\n          <div className=\"wrapper\">\n            <iframe\n              // style={{transform: 'rotate(90deg)'}}\n              style={{ width: '110%', height: '110%', margin: 0, padding: 0, border: 0, top: 0, left: 0 }}\n              className=\"relative w-full h-full\"\n              // src=\"https://nftsearch.site/\"\n              // src=\"https://dayuan.dev/\"\n              src=\"https://aframe.io/examples/showcase/anime-UI/\"\n              title=\"W3Schools Free Online Web Tutorials\">\n\n            </iframe>\n          </div>\n        </Html>\n        </group> */}\n      {/* <group rotation={[0, Math.PI / 8 * 1.5, 0]} >\n          <Image ref={image} rotation={[Math.PI / 2, Math.PI / 2, -Math.PI]} position={[0, 0, 0]} scale={[0.4, 0.3]} transparent={true} opacity={1} raycast={() => null} url={\"/thumbnail.png\"} />\n        </group> */}\n      {/* </mesh> */}\n\n    </group>\n  )\n}\n\nuseGLTF.preload(process.env.REACT_APP_URL + '/arcade_Draco.glb')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(process.env.REACT_APP_URL+'/80s_Draco.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      {/* <mesh geometry={nodes.Icosphere.geometry} material={nodes.Icosphere.material} position={[-0.44, 0, 0]} />\n      <mesh geometry={nodes.Island009.geometry} material={nodes.Island009.material} /> */}\n      {/* <mesh\n        geometry={nodes.Plane.geometry}\n        material={materials['Material.003']}\n        rotation={[0, Math.PI / 2, 0]}\n        scale={8}\n      />\n      <mesh\n        geometry={nodes.Plane001.geometry}\n        material={materials['Material.001']}\n        rotation={[0, Math.PI / 2, 0]}\n        scale={8}\n      /> */}\n      {/* <mesh geometry={nodes.Island001.geometry} material={nodes.Island001.material} position={[0, 0, 0]} /> */}\n      <mesh\n        geometry={nodes.Island013.geometry}\n        material={materials['mt_palette_main.003']}\n        position={[0, 0, -5.54]}\n        scale={2.13}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(process.env.REACT_APP_URL+'/80s_Draco.glb')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nauthor: 0418.rick (https://sketchfab.com/0418.rick)\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nsource: https://sketchfab.com/3d-models/vaporwave-mountains-655309efbf7647f9a6f573a1196cfdc9\ntitle: Vaporwave Mountains\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF(process.env.REACT_APP_URL+'/mountains_Draco.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <group scale={8}>\n            <mesh geometry={nodes.Object_4.geometry} material={materials['Material.001']} />\n          </group>\n          <group scale={8}>\n            <mesh geometry={nodes.Object_6.geometry} material={materials['Material.002']} />\n          </group>\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]} position={[-15,0, 0]}>\n          <group scale={8}>\n            <mesh geometry={nodes.Object_4.geometry} material={materials['Material.001']} />\n          </group>\n          <group scale={8}>\n            <mesh geometry={nodes.Object_6.geometry} material={materials['Material.002']} />\n          </group>\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(process.env.REACT_APP_URL+'/mountains_Draco.glb')\n","import * as THREE from 'three'\nimport { Suspense, useEffect, useRef } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { suspend } from 'suspend-react'\n\nexport default function MApp(props) {\n  return (\n    <Canvas shadows dpr={[1, 2]} camera={{ position: [-1, 1.5, 2], fov: 25 }}>\n      <spotLight position={[-4, 4, -4]} angle={0.06} penumbra={1} castShadow shadow-mapSize={[2048, 2048]} />\n      <Suspense fallback={null}>\n        <Track position-z={-0.25} url=\"/synth.mp3\" />\n        <Track position-z={0} url=\"/snare.mp3\" />\n        <Track position-z={0.25} url=\"/drums.mp3\" />\n        <Zoom url=\"/drums.mp3\" />\n      </Suspense>\n      <mesh receiveShadow rotation={[-Math.PI / 2, 0, 0]} position={[0, -0.025, 0]}>\n        <planeGeometry />\n        <shadowMaterial transparent opacity={0.15} />\n      </mesh>\n    </Canvas>\n  )\n}\n\nexport function Track({ url, y = 2500, space = 1.8, width = 0.01, height = 0.05, obj = new THREE.Object3D(), ...props }) {\n  const ref = useRef()\n  // suspend-react is the library that r3f uses internally for useLoader. It caches promises and\n  // integrates them with React suspense. You can use it as-is with or without r3f.\n  const { gain, context, update, data } = suspend(() => createAudio(url), [url])\n  useEffect(() => {\n    // Connect the gain node, which plays the audio\n    gain.connect(context.destination)\n    gain.gain.value = 0.3\n    // Disconnect it on unmount\n    return () => gain.disconnect()\n  }, [gain, context])\n\n  useFrame((state) => {\n    let avg = update()\n    // Distribute the instanced planes according to the frequency daza\n    for (let i = 0; i < data.length; i++) {\n      obj.position.set(i * width * space - (data.length * width * space) / 2, data[i] / y, 0)\n      obj.updateMatrix()\n      ref.current.setMatrixAt(i, obj.matrix)\n    }\n    // Set the hue according to the frequency average\n    ref.current.material.color.setHSL(avg / 500, 0.75, 0.75)\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n  return (\n    <instancedMesh castShadow ref={ref} args={[null, null, data.length]} {...props}>\n      <planeGeometry args={[width, height]} />\n      <meshBasicMaterial toneMapped={false} />\n    </instancedMesh>\n  )\n}\n\nexport function Zoom({ url }) {\n  // This will *not* re-create a new audio source, suspense is always cached,\n  // so this will just access (or create and then cache) the source according to the url\n  const { data } = suspend(() => createAudio(url), [url])\n  return useFrame((state) => {\n    // Set the cameras field of view according to the frequency average\n    // state.camera.fov = 25 - data.avg / 15\n    // state.camera.updateProjectionMatrix()\n  })\n}\n\nasync function createAudio(url) {\n  // Fetch audio data and create a buffer source\n  const res = await fetch(url)\n  const buffer = await res.arrayBuffer()\n  const context = new (window.AudioContext || window.webkitAudioContext)()\n  const source = context.createBufferSource()\n  source.buffer = await new Promise((res) => context.decodeAudioData(buffer, res))\n  source.loop = true\n  // This is why it doesn't run in Safari 🍏🐛. Start has to be called in an onClick event\n  // which makes it too awkward for a little demo since you need to load the async data first\n  source.start(0)\n  // Create gain node and an analyser\n  const gain = context.createGain()\n  const analyser = context.createAnalyser()\n  analyser.fftSize = 64\n  source.connect(analyser)\n  analyser.connect(gain)\n  // The data array receive the audio frequencies\n  const data = new Uint8Array(analyser.frequencyBinCount)\n  return {\n    context,\n    source,\n    gain,\n    data,\n    // This function gets called every frame per audio source\n    update: () => {\n      analyser.getByteFrequencyData(data)\n      // Calculate a frequency average\n      return (data.avg = data.reduce((prev, cur) => prev + cur / data.length, 0))\n    },\n  }\n}\n","import * as THREE from 'three'\nimport { useMemo, useLayoutEffect, useRef, useState, useEffect, Suspense } from 'react'\nimport { Html, Mask, Image, Environment, useGLTF, Text, ContactShadows, OrbitControls, PresentationControls } from '@react-three/drei'\n\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport Level from './components/Level'\nimport Sudo from './components/Sudo'\nimport Camera from './components/Camera'\nimport Cactus from './components/Cactus'\nimport Icon from './components/Icon'\nimport Pyramid from './components/Pyramid'\nimport Arcade from './components/Arcade_Draco'\nimport CY80s from './components/80s_Draco'\n\nimport Mountains from './components/Mountains_Draco'\nimport useRWD from './useRWD';\n\n\n\n\nimport { Track, Zoom } from './Music/TrackMusic'\nconst v = new THREE.Vector3()\n\n\nexport default function App({ ready }) {\n\n  const usePersonControls = () => {\n    const keys = {\n      KeyW: 'forward',\n      KeyS: 'backward',\n      KeyA: 'left',\n      KeyD: 'right',\n      Space: 'jump',\n      KeyJ: 'buttonB',\n      KeyK: 'buttonR',\n      KeyL: 'buttonG',\n      Escape: 'Escape',\n      ArrowLeft: 'left',\n      ArrowUp: 'forward',\n      ArrowRight: 'right',\n      ArrowDown: 'backward',\n    }\n\n    const moveFieldByKey = (key) => keys[key]\n\n    const [movement, setMovement] = useState({\n      forward: false,\n      backward: false,\n      left: false,\n      right: false,\n      jump: false,\n      buttonB: false,\n      buttonR: false,\n      buttonG: false,\n      Escape: false,\n    })\n\n    useEffect(() => {\n      const handleKeyDown = (e) => {\n        setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: true }))\n      }\n      const handleKeyUp = (e) => {\n        setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: false }))\n      }\n      document.addEventListener('keydown', handleKeyDown)\n      document.addEventListener('keyup', handleKeyUp)\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown)\n        document.removeEventListener('keyup', handleKeyUp)\n      }\n    }, [])\n    return movement\n  }\n  const { forward, backward, left, right, jump, buttonB, buttonR, buttonG, Escape } = usePersonControls()\n\n\n\n\n  useEffect(() => {\n    // console.log(forward, backward, left, right, jump, buttonB, buttonR, buttonG, Escape)\n\n    if (Escape) {\n      setStart(false)\n      setAPPReady(false)\n      setClicked(true)\n    }\n  }, [forward, backward, left, right, jump, buttonB, buttonR, buttonG, Escape])\n\n\n  const [APPready, setAPPReady] = useState(false)\n  const [start, setStart] = useState(false)\n  const [clicked, setClicked] = useState(false)\n  return (\n    <Canvas flat dpr={[1, 2]} camera={{ fov: 25, position: [0, 0, 8] }}>\n      {/* // <Canvas flat dpr={[1, 2]} camera={{ fov: 25, position: [0, 0, 1.2] }}> */}\n      {/* <color attach=\"background\" args={['#8ecae6']} /> */}\n      <color attach=\"background\" args={['#e63946']} />\n\n      <Suspense fallback={null}>\n        <group position={[2.5, -0.5, 0]}>\n          <Track position-z={-0.5} url={`${process.env.REACT_APP_URL}/comping1.mp3`} />\n          <Track position-z={-0.25} url={`${process.env.REACT_APP_URL}/synth.mp3`} />\n          <Track position-z={0} url={`${process.env.REACT_APP_URL}/snare.mp3`} />\n          <Track position-z={0.25} url={`${process.env.REACT_APP_URL}/drums.mp3`} />\n\n\n          {/* <Zoom url=\"/drums.mp3\" /> */}\n        </group>\n      </Suspense>\n\n      <ambientLight />\n      {/* <PresentationControls global zoom={0.8} rotation={[0, -Math.PI / 4, 0]} polar={[0, Math.PI / 4]} azimuth={[-Math.PI / 4, Math.PI / 4]}> */}\n      {/* <PresentationControls global zoom={0.1} rotation={[0, -Math.PI / 2, 0]} polar={[0, Math.PI / 4]} azimuth={[-Math.PI / 4, Math.PI / 4]}> */}\n        <PresentationControls\n        global\n        zoom={0.1}\n        config={{ mass: 2, tension: 500 }}\n        snap={{ mass: 4, tension: 1500 }}\n        rotation={[0, -Math.PI / 2, 0]}\n        polar={[0, Math.PI / 4]} \n        azimuth={[-Math.PI / 4, Math.PI / 4]}\n        // polar={[-Math.PI / 3, Math.PI / 3]}\n        // azimuth={[-Math.PI / 1.4, Math.PI / 2]}\n        >\n\n        <group onClick={() => {\n          // setStart(true)\n          // setReady(true)\n          setStart(!start)\n        }} position-y={-0.75} dispose={null}>\n          <Arcade keys={usePersonControls()} _ready={APPready} _setReady={setAPPReady} start={start} clicked={clicked} />\n        </group>\n      </PresentationControls>\n      <group rotation={[0, -Math.PI / 2, 0]}>\n        <Suspense fallback={null}>\n          {/* <ambientLight /> */}\n          <Mountains position={[1, -0.6, 0]} rotation={[0, 0, 0]} scale={0.8} />\n          <CY80s position={[-5, -0.1, 0]} rotation={[0, Math.PI / 2, 0]} scale={0.8} />\n\n          {/* <CY80s position={[-2, -0.6, 0]} rotation={[0, Math.PI / 2, 0]} scale={0.8}/> */}\n\n        </Suspense>\n        {/* {ready&&}  */}\n        <TitleText start={start} onClick={() => {\n          setClicked(true)\n        }} rotation={[0, Math.PI / 2, 0]}\n          position={[0, -0.1, 0.18]}\n        />\n\n        {/* <mesh rotation={[0, Math.PI / 2, 0]} position={[-0.3, 0, 0]}>\n            <planeGeometry args={[50, 50]} />\n            <meshStandardMaterial color=\"blue\" />\n          </mesh> */}\n        <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -0.75, 0]}>\n\n          <planeGeometry args={[50, 50]} />\n          <meshStandardMaterial color=\"#023047\" />\n        </mesh>\n      </group>\n      {/* <gridHelper /> */}\n\n      {/* <WasdControls/> */}\n\n      {/* <OrbitControls /> */}\n\n    </Canvas>\n  )\n}\n\n\nfunction TitleText({ start, clicked, ...props }) {\n\n  const device = useRWD();\n  const TitleText = useRef()\n\n\n  useFrame((state) => {\n    if (start) {\n      if (device === \"PC\") {\n        TitleText.current.position.lerp(v.set(0, -0.1, 0.18), 0.05)\n        TitleText.current.fontSize = 1.25\n      } else {\n        TitleText.current.position.lerp(v.set(2.5, -0.25, 0), 0.05)\n        TitleText.current.fontSize = 0.5\n      }\n    } else {\n      TitleText.current.position.lerp(v.set(0, -0.1, 0.18), 0.05)\n      TitleText.current.fontSize = 1.25\n    }\n  })\n\n  return (\n    <Text ref={TitleText} font={`${process.env.REACT_APP_URL}/Inter-Bold.woff`} fontSize={1.25} letterSpacing={-0.1} {...props}>\n      Arcade\n      <meshStandardMaterial color=\"#c9ffed\" />\n    </Text>\n  )\n}\n\n// function Jumbo({...props }) {\n//   const ref = useRef()\n//   useFrame(({ clock }) => (ref.current.rotation.x = ref.current.rotation.y = ref.current.rotation.z = Math.sin(clock.getElapsedTime()) * 0.3))\n//   return (\n//     <group ref={ref} {...props }>\n//       <Text hAlign=\"right\" position={[0, -0.1, 0.18]} children=\"THREE\" />\n//       <Text hAlign=\"right\" position={[0, -1, 0.18]}children=\"TRES\" />\n//       <Text hAlign=\"right\"   fontSize={1.25} letterSpacing={-0.1}  position={[0, 1, 0.18]} children=\"TROIS\" />\n//     </group>\n//   )\n// }\n\n","import { cloneElement, useState } from \"react\"\n// import { Footer } from \"@cs6/branding\"\nimport useRWD from './useRWD';\n\nexport default function Intro({ children }) {\n\n  const device=useRWD();\n\n\n\n  const [clicked, setClicked] = useState(false)\n  return (\n    <>\n      {clicked && children}\n      {/* {cloneElement(children, { ready: clicked })} */}\n      <div className={`fullscreen bg ready\"} ${clicked && \"clicked\"}`} >\n        <a onClick={() => setClicked(true)}><h1 className={`close ${ device===\"PC\"?\"h1-text\":\"h1-text-mobile\"}`} children=\"<Click>\" /> </a>\n        {/* <a  className=\"Enter SimSun\"  href=\"#\" onClick={() => setClicked(true)}>\n           <h2> {\"請您稍等一會.... 然後點我\"}</h2>\n          </a> */}\n      </div>\n\n    </>\n  )\n}\n","// Original and the models by Bruno Simon: https://threejs-journey.com\n\nimport { render } from 'react-dom'\nimport { Suspense } from 'react'\nimport { Loader } from '@react-three/drei'\nimport './styles.css'\nimport App from './App'\nimport Intro from './intro'\n\nimport { Footer } from \"@cs6/branding\"\nimport MApp,{ Track, Zoom } from './Music/TrackMusic'\n\n\nconsole.log('APP_URL', process.env.REACT_APP_URL)\n\n\nrender(\n  <>\n  \n    <Intro>\n    <Suspense fallback={null}>\n      <App/>\n    </Suspense>\n    </Intro>\n    {/* <h1 class=\"open\" children=\"<h1>\" /> */}\n      {/* <h1 class=\"close\" children=\"</h1>\" /> */}\n    <Footer \n      date=\"30. May\"\n      year=\"2022\"\n      link1={<a href=\"https://github.com/dayuan/Demo\">dayuan/Demo</a>}\n      link2={<a href=\"https://codesandbox.io/s/duo-ge-demotheatre-iphone-reflector-variant-pf-demo-forked-2x4mw7\">Code Lab</a>}\n    />\n    <Loader />\n  </>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}